{"version":3,"sources":["components/Demo.js","components/Home.js","components/Header.js","components/Footer.js","components/Rates.js","App.js","components/Config.js","serviceWorker.js","index.js"],"names":["Demo","socket","Header","props","state","profiles","avatar","name","counter","showSetting","user","password","handleSetting","bind","handleLogin","handleChangeUser","handleChangePassword","handleChangeCounter","this","setState","console","log","alert","event","target","value","evt","counter_num","profile","Container","fluid","Alert","variant","Image","style","className","src","width","onClick","Row","Col","sm","height","rounded","Modal","show","onHide","closeButton","Title","Body","Form","Group","as","controlId","Label","column","Control","placeholder","onChange","type","Footer","Button","Dropdown","onSelect","Toggle","id","Menu","map","Item","eventKey","React","Component","footer","address","Rates","imagesrc","scr","rate","showAlert","setTimeout","counter_rate","elmRate","image","size","bsPrefix","Home","endpoint","socketIOClient","secure","on","data","emit","num","isHome","App","showHomeName","showHome","showDemoName","showDemo","showConfigName","showConfig","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ec6cbc0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Button, InputGroup, Image, Container, Row, Col, Form} from 'react-bootstrap';\r\nfunction Demo(props) {\r\n  const [greeting, setGreeting] = useState('WELCOME TO MY APP COMPONENT');\r\n  const onChangeGreeting = e => setGreeting(e.target.value);\r\n  const items = [\r\n    { name: 'Excellent',\r\n      src: 'logo192.png'\r\n    },\r\n    { name: 'Good',\r\n      src: 'logo192.png'\r\n    },\r\n    { name: 'Normal',\r\n      src: 'logo192.png'\r\n    },\r\n    { name: 'Bad',\r\n      src: 'logo192.png'\r\n    }\r\n  ];\r\n  const elmImage = items.map((item, index) =>\r\n    <Col key={index}>\r\n      <h2>{item.name}</h2>\r\n      <Image src={item.src} onClick={()=>{ alert('Excellent'); }} rounded />\r\n      <Button variant ='success'>{item.name}</Button>\r\n      <Form.Control type='text' placeholder={item.name}/>\r\n    </Col>\r\n  );\r\n\r\n  if(!props.isDemo){\r\n    return null;\r\n  }\r\n  return (\r\n    <div>\r\n        <Container fluid className='App-header'>\r\n        <h1 className='App-transition'>{greeting}</h1>\r\n        <InputGroup>\r\n          <Button variant='success'>Edit text</Button>\r\n          <Form.Control\r\n              size='lg' type='text'\r\n              value={greeting}\r\n              onChange={onChangeGreeting}\r\n          />\r\n        </InputGroup>\r\n\r\n\r\n          <Row>\r\n            {elmImage}\r\n          </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Demo;\r\n","import React, {Component} from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Rates from './Rates';\r\nvar socket;\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state={\r\n        address: '108 NGUYỄN DUY CUNG P12 GÒ VẤP',\r\n        counter:1,\r\n        endpoint: \"http://localhost:8888\"\r\n      };\r\n      this.counter_num = this.counter_num.bind(this);\r\n      this.counter_rate = this.counter_rate.bind(this);\r\n      socket = socketIOClient(this.state.endpoint, {secure:true});\r\n\r\n  }\r\n  componentWillMount(){\r\n    socket.on('connect', () => {\r\n      socket.on('Server-greeting',function(data){\r\n        // <h3>Server connected!</h3>\r\n        console.log(data);\r\n\r\n      })\r\n      socket.emit(\"Client-counter\",this.state.counter)\r\n    });\r\n  }\r\n  counter_num(num){\r\n    this.setState({counter:num})\r\n  }\r\n  counter_rate(rate){\r\n    socket.emit(\"Client-send-data\",this.state.counter+': '+rate)\r\n\r\n    console.log(this.state.counter+': '+rate);\r\n\r\n  }\r\n  render(){\r\n    if(this.props.isHome){\r\n      return null;\r\n      }\r\n      return (\r\n        <div>\r\n\r\n            <Header counter_num = {this.counter_num}/>\r\n            <hr/>\r\n            <Rates counter_rate = {this.counter_rate}/>\r\n            <hr/>\r\n            <Footer address={this.state.address} />\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport {Button, Alert, Image, Col, Row, Container, Modal, Form} from 'react-bootstrap';\r\nimport {Dropdown} from 'react-bootstrap';\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state={\r\n        profiles:[\r\n          {\r\n          avatar: \"./Image/man.png\",\r\n          name:'Nguyễn Văn A',\r\n          counter: 1\r\n        },{\r\n          avatar: \"./Image/man2.png\",\r\n          name:'Nguyễn Văn B',\r\n          counter: 2\r\n        },{\r\n        avatar: \"./Image/women.png\",\r\n        name:'Nguyễn Thị Nữ',\r\n        counter: 3\r\n      },{\r\n        avatar: \"./Image/man.png\",\r\n        name:'Trần Văn Nam',\r\n        counter: 4\r\n      },{\r\n        avatar: \"./Image/women.png\",\r\n        name:'Lê Thị Xuân',\r\n        counter: 5\r\n        }\r\n      ],\r\n      showSetting: false,\r\n      user: '',\r\n      password:'',\r\n      counter:0\r\n    };\r\n    this.handleSetting=this.handleSetting.bind(this);\r\n    this.handleLogin=this.handleLogin.bind(this);\r\n    this.handleChangeUser=this.handleChangeUser.bind(this);\r\n    this.handleChangePassword=this.handleChangePassword.bind(this);\r\n    this.handleChangeCounter=this.handleChangeCounter.bind(this);\r\n\r\n  }\r\n  handleSetting(){\r\n    this.setState({showSetting: !this.state.showSetting})\r\n  }\r\n  handleLogin(){\r\n    if((this.state.user)==='admin' && (this.state.password)==='admin' ){\r\n      console.log(\"OK\")\r\n\r\n      this.setState({showSetting: !this.state.showSetting})\r\n      alert(\"Login Success\")\r\n    }\r\n    else\r\n    console.log(\"Fail\")\r\n  }\r\n  handleChangeUser(event){\r\n    this.setState({user: event.target.value});\r\n  }\r\n  handleChangePassword(event){\r\n    this.setState({password: event.target.value});\r\n  }\r\n  handleChangeCounter(evt){\r\n    this.setState({counter: evt-1});\r\n    this.props.counter_num(evt)\r\n\r\n  }\r\n  render(){\r\n      let profile = this.state.profiles[this.state.counter];\r\n      return (\r\n      <div>\r\n        <Container fluid>\r\n            <Alert variant=\"custom-header\">Vui lòng nhấn nút bình chọn\r\n              <Image  style={{\"marginLeft\": \"64vw\"}}\r\n                      className=\"img-fluid\"\r\n                      src='./logo192.png'\r\n                      width={30}\r\n                      onClick={this.handleSetting}>\r\n              </Image>\r\n            </Alert>\r\n            <Row className='Avatar'>\r\n              <Col sm={2}>\r\n                <Image  src={profile.avatar}  width={\"140vw\"} height={\"180vw\"} rounded/>\r\n              </Col>\r\n              <Col className='TextTitle'>\r\n                <Row>Nhân viên: {profile.name}</Row>\r\n                <Row>Quầy số: {profile.counter}</Row>\r\n              </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n        <Modal show={this.state.showSetting} onHide={this.handleSetting}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Please Login!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                <Form.Label column sm=\"2\"> <strong>User</strong> </Form.Label>\r\n                <Col><Form.Control placeholder=\"User\" onChange={this.handleChangeUser}/></Col>\r\n              </Form.Group>\r\n              <Form.Group as={Row} onChange={this.handleChangePassword}  >\r\n                <Form.Label column sm=\"2\"> <strong>Password</strong> </Form.Label>\r\n                <Col><Form.Control type=\"password\" placeholder=\"Password\" /></Col>\r\n              </Form.Group>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.handleLogin} variant=\"primary\" type='submit'>\r\n              Login\r\n            </Button>\r\n          </Modal.Footer>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group as={Row}>\r\n                <Form.Label column sm=\"3\"> <strong>Chọn quầy:</strong> </Form.Label>\r\n                <Col>\r\n                  <Dropdown onSelect={this.handleChangeCounter}>\r\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" >\r\n                      {this.state.counter+1}\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                          {this.state.profiles.map( (profiles)=>(\r\n                            <Dropdown.Item eventKey={profiles.counter} >\r\n                              {profiles.counter}\r\n                            </Dropdown.Item>\r\n                            )\r\n                          )}\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </Col>\r\n              </Form.Group>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport {Container,Alert} from 'react-bootstrap';\r\n\r\nclass Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state={\r\n        footer: \"Default Address\",\r\n      };\r\n  }\r\n  render(){\r\n       let footer=this.props.address;\r\n      return (\r\n        <div >\r\n          <Container fluid>\r\n            <Alert variant=\"custom-footer\">\r\n                <div className='move'>{footer}</div>\r\n            </Alert>\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport { Image, Row, Col, Container, Modal} from 'react-bootstrap';\r\nclass Rates extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state={\r\n        imagesrc:[{\r\n            scr:'./Excellent.png',\r\n            rate: 'Excellent'\r\n              },{\r\n            scr:'./Good.png',\r\n            rate: 'Good'\r\n              },{\r\n            scr:'./Normal.png',\r\n            rate: 'Normal'\r\n              },{\r\n            scr:'./Bad.png',\r\n            rate: 'Bad'\r\n              }\r\n        ],\r\n        showAlert: false,\r\n        rate: null\r\n      };\r\n      this.showAlert = this.showAlert.bind(this);\r\n  }\r\n  showAlert(rate){\r\n    this.setState({showAlert: true})\r\n    this.setState({rate: rate})\r\n    setTimeout(() => this.setState({showAlert: false}),2000)\r\n    this.props.counter_rate(rate)\r\n  }\r\n  render(){\r\n    const imagesrc = this.state.imagesrc;\r\n    const elmRate = imagesrc.map((image) =>{\r\n      return(\r\n        <Col>\r\n          <Image\r\n            className=\"img-fluid\"\r\n\r\n            width={400}\r\n            src={image.scr}\r\n            onClick={()=>{this.showAlert(image.rate)}}\r\n            rounded />\r\n            <h2 onClick={()=>{this.showAlert(image.rate)}}\r\n                className=\"Rate-Name\">\r\n              {image.rate}\r\n            </h2>\r\n        </Col>\r\n      );\r\n    });\r\n      return (\r\n        <div>\r\n          <Container fluid>\r\n            <Row>\r\n              {elmRate}\r\n            </Row>\r\n\r\n          </Container>\r\n          <Container fluid>\r\n            <Modal  show={this.state.showAlert} size='lg'\r\n                    onHide={()=>{this.setState({showAlert:false})}}>\r\n              <Modal.Header bsPrefix='Rate'>\r\n                <Modal.Title>\r\n                  <strong><h2>CẢM ƠN QUÝ KHÁCH ĐÃ ĐÁNH GIÁ</h2></strong>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body bsPrefix='Rate'>\r\n                Bạn vừa đánh giá: <strong> {this.state.rate}</strong>\r\n              </Modal.Body>\r\n            </Modal>\r\n\r\n          </Container>\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rates;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Demo from './components/Demo';\r\nimport Home from './components/Home';\r\nimport Config from './components/Config';\r\n\r\nclass App extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {showHomeName: true};\r\n    this.showHome = this.showHome.bind(this);\r\n    this.state = {showDemoName: true};\r\n    this.showDemo = this.showDemo.bind(this);\r\n    this.state = {showConfigName: false};\r\n    this.showConfig = this.showConfig.bind(this);\r\n  }\r\n  showHome(){\r\n    this.setState(state => ({\r\n      showHomeName: !state.showHomeName\r\n    }));\r\n    this.setState ({showDemoName: false});\r\n    this.setState ({showConfigName: false});\r\n  }\r\n  showConfig(){\r\n      this.setState(state => ({\r\n        showConfigName: !state.showConfigName\r\n      }));\r\n      this.setState ({showDemoName: false});\r\n      this.setState ({showHomeName: false});\r\n    }\r\n  showDemo() {\r\n    this.setState(state => ({\r\n      showDemoName: !state.showDemoName\r\n    }));\r\n    this.setState ({showHomeName: false});\r\n    this.setState ({showConfigName: false});\r\n  }\r\n  render(){\r\n    return (\r\n      <div className='App'>\r\n        {/*<Form className=\"App\">\r\n          <Button variant='primary'onClick={this.showHome}>Home</Button>\r\n          <Button variant='primary'onClick={this.showConfig}>Configure</Button>\r\n          <Button variant='primary'>App</Button>\r\n          <Button variant='primary'>Database</Button>\r\n          <Button variant='primary'onClick={this.showDemo}>{this.state.showDemoName ? 'Back' : 'Demo'}</Button>\r\n        </Form>*/}\r\n          <Home isHome={this.state.showHomeName}/>\r\n          {/*<Config isConfig={this.state.showConfigName}/>\r\n          <Demo isDemo={this.state.showDemoName}/>*/}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\nclass Config extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      textname:'WELCOME'\r\n    };\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n}\r\n   onChangeText (event) {\r\n     this.setState({textname: event.target.value});\r\n   }\r\n render(){\r\n  if(!this.props.isConfig){\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>This function is under <code>development</code> </h1>\r\n      <Form.Control type='text' value={this.state.textname} onChange={this.onChangeText}/>\r\n      <Button>{this.state.textname}</Button>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Config;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}